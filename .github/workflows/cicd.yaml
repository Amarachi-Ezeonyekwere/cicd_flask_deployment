name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
    paths-ignore: 
      - '**.md'
      - '**.docs/**'
  pull_request:
    branches: [ master ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ----------------------------
      # Secret scanning
      # ----------------------------
      - name: Scan for secrets with Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-git --redact
      - name: Add summary for Gitleaks
        if: always()
        run: echo "### 🔐 Secret Scan\n- ✅ Gitleaks scan completed" >> $GITHUB_STEP_SUMMARY

      # ----------------------------
      # Python security checks
      # ----------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install -r flask-todo/requirements.txt

      - name: Run Bandit (Python security analysis)
        run: pip install bandit && bandit -r flask-todo
      - name: Add summary for Bandit
        if: always()
        run: echo "### 🛡️ Bandit\n- ✅ Python security analysis completed" >> $GITHUB_STEP_SUMMARY

      - name: Run pip-audit (Dependency vulnerabilities)
        run: pip install pip-audit && pip-audit -r flask-todo/requirements.txt
      - name: Add summary for pip-audit
        if: always()
        run: echo "### 📦 pip-audit\n- ✅ Dependency vulnerability scan completed" >> $GITHUB_STEP_SUMMARY

      # ----------------------------
      # Dockerfile security checks
      # ----------------------------
      - name: Lint Dockerfile
        run: docker run --rm -i hadolint/hadolint < ./flask-todo/dockerfile
      - name: Add summary for Hadolint
        if: always()
        run: echo "### 🐳 Hadolint\n- ✅ Dockerfile linting completed" >> $GITHUB_STEP_SUMMARY

      # ----------------------------
      # Build Docker image
      # ----------------------------
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./flask-todo
          push: true
          tags: amara3000/cicd-flask-todo:latest
      - name: Add summary for Docker Build
        if: always()
        run: echo "### 🏗️ Docker Build\n- ✅ Image built and pushed to Docker Hub" >> $GITHUB_STEP_SUMMARY

      # ----------------------------
      # Post-build image vulnerability scan
      # ----------------------------
      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: amara3000/cicd-flask-todo:latest
          format: 'table'
          exit-code: '1' # fail if vulnerabilities found
          severity: 'CRITICAL,HIGH'
      - name: Add summary for Trivy
        if: always()
        run: echo "### 🔎 Trivy Scan\n- ✅ Image vulnerability scan completed" >> $GITHUB_STEP_SUMMARY
